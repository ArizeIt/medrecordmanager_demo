@model MedRecordManager.Models.FilterRecord
@{
    ViewData["Title"] = "Bulk Updates";
}

@section AddtoHead{
    <link href="~/lib/bootstrap-toggle/css/bootstrap-toggle.min.css" rel="stylesheet" type="text/css" />
    <link href="~/css/autoComplete-lhc.css" rel="stylesheet" type="text/css" />
}

@section scripts{
    <script src="~/lib/bootstrap-toggle/js/bootstrap-toggle.min.js"></script>
    <script src='https://clinicaltables.nlm.nih.gov/autocomplete-lhc-versions/17.0.2/autocomplete-lhc.min.js'></script>
    <script type="text/javascript">
        var unsaved = false;
        var flaggedGrid;

        function unloadPage() {
            if (unsaved) {
                return "You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?";
            }
        }

        //$(document).ajaxStart(function () {
        //        $loading.show();
        //    })
        //        .ajaxStop(function () {
        //            $loading.hide();
        //        });



        $(document).ready(function () {
            var regex = /^(.*)(\d)+$/i;

            var flagManager = function (value, record, $cell, $displayEl, id, $grid) {
                var $checkBox = $('<input type="checkbox">').prop('checked', record.selected)
                    .attr({
                        'dataKey': id
                    });

                $checkBox.on('change', function (e) {
                    var mark = $(this).is(':checked');
                    SelectRecord(id, mark);
                });
                $displayEl.empty().append($checkBox);
            };

            
            flaggedGrid = $('#flaggedVisitTable').grid({
                primaryKey: 'visitId',
                dataSource: '/BulkEdit/GetBulkVisit',
              
                columns: [
                    //{ field: 'pvRecordId', width:100, title: 'PV RecordId' },
                    { field: 'selected', width: 50, title:'<input type="Checkbox" id="selectedPage">', renderer: flagManager },
                    { filed: 'visitId', hidden: true },
                    //{ field: 'selected', width: 80, renderer: flagManager},
                    { field: 'patientName', Width: 300, title: 'Patient Name' },
                    { field: 'clinicName', Width: 150, title: 'Clinic Name' },
                    { field: 'physicianName', Width: 150, title: 'Physicin' },
                    
                    { field: 'pvFinClass', minwidth: 100, title: 'Finacial Class' },
                    { field: 'payment', minwidth: 100, title: 'Payment $' },
                    { field: 'diagCode', width: 150, title: 'Diag Codes' },
                    { field: 'icdCodes', width: 150, title: 'Icd Codes' },
                    { field: 'procCodes', minwidth: 80, title: 'Proc Codes' },
                    { field: 'visitTime', minwidth: 80, title: 'Visit Date' },
                    { field: 'appliedRules', minWidth: 100, title: 'Applied Rules' }
                ],
                pager: { limit: 10, sizes: [2, 5, 10, 20] },
            });
                      
            

            $('#startDate').datepicker({
                uiLibrary: 'bootstrap'
            });

            $('#endDate').datepicker({
                uiLibrary: 'bootstrap'
            });

            $('#filterButton').on('click', function () {
                filterBulkView();
            });

            $('#selectedPage').on('click', function () {
                var ischecked = $(this).is(':checked');

                $('#flaggedVisitTable').find('td :input[type=checkbox]').prop('checked', ischecked).each(function () {
                    var id = $(this).attr('datakey');
                    var mark = $(this).is(':checked');
                    SelectRecord(id,mark);
                })
                flaggedGrid.reload();
            })

            $(".totalSelect").on('change', function () {
                var ischecked = $("#selectAll").is(':checked');
                var clinics = [];
                var physicians = [];
                var physicians = [];
                var rules = [];
                var finclasses = [];

                $('#clinic > Option:selected').each(function () {
                    clinics.push(this.value);
                });

                $('#physician > Option:selected').each(function () {
                    physicians.push(this.value);
                });
                $('#rule > Option:selected').each(function () {
                    rules.push(this.value);
                });
                $('#finclass > Option:selected').each(function () {
                    finclasses.push(this.value);
                });

                $.ajax({
                    type: "POST",
                    url: "/record/markBulkUpdate",
                    data: {
                        clinic: clinics.join(','),
                        physician: physicians.join(','),
                        rule: rules.join(','),
                        finclass: finclasses.join(','),
                        startDate: $('#startDate').val(),
                        endDate: $('#endDate').val(),
                        ischecked: ischecked
                    },
                    success: function (response) {
                          $('#flaggedVisitTable').find('td :input[type=checkbox]').prop('checked', ischecked)
                    }
                });
                flaggedGrid.clear();
                flaggedGrid.reload(/*{ page: 2, clinic: clinics.join(','), physician: physicians.join(','), rule: rules.join(','), startDate: $('#startDate').val(), endDate: $('#endDate').val(), ischecked: ischecked }*/);
                               
            });

            $('#btnAddAction').on('click', function () {
                var $tr = $('#actionDetail tr:last');
                var $clone = $tr.clone(true);
                var cindex = $('#actionDetail tr').length;

                $clone.find('.actionContent').empty();
                if ($('#actionDetail').is(':hidden')) {
                    $('#actionDetail').show();
                    $('#actionDetail .actionContent').hide();
                }

                if ($('#btnExecute').is(':hidden'))
                {
                    $('#btnExecute').show();
                }
                else {

                    if ($tr.find('.actionSelector').val() != 0) {
                        cloneActionTable($clone, cindex);
                        $tr.after($clone);
                    }
                    else {
                        alert('You can not add another action before you finish this one.')
                    }
                }
            });

            $('.actionSelector').on('change', function () {              
                var tId = $(this).closest('.tr_clone').attr('id');
                var $newMod = $('#codeTemp').clone();
                var $newIcd = $('#icdTemp').clone();
                var $newDpl = $('#dplTemp').clone();
                var $actionContent = $(this).closest('.tr_clone').find('.actionContent');

                $actionContent.empty();
                $actionContent.show();
                if (this.value == 'addMod' || this.value == 'delMod') {
                    var modId = 'modAct_' + tId;
                    $newMod.attr('id', modId)
                    $newMod.appendTo($actionContent);
                    $newMod.show();
                }

                if (this.value == 'addCpt' || this.value == 'delCpt') {
                    var modId = 'cptAct_' + tId;
                    $newMod.attr('id', modId)
                    $newMod.appendTo($actionContent);
                    $newMod.find('.modifier').remove();
                    $newMod.show();
                }

                if (this.value == 'addIcd' || this.value == 'delIcd') {
                    var cptId = 'icdAct_' + tId;
                    var inputIcd = 'tIcd_' + tId;
                    $newIcd.attr('id', cptId);
                    $newIcd.appendTo($actionContent);
                    $newIcd.find('input[type=text]').attr('id', inputIcd)
                    $newIcd.show();
                    new Def.Autocompleter.Search(inputIcd, 'https://clinicaltables.nlm.nih.gov/api/icd10cm/v3/search?sf=code,name',
                        { tableFormat: true, valueCols: [0], colHeaders: ['Code', 'Name'] });
                }

                if (this.value == 'updClinic') {
                    var clinicId = 'dplcl_' + tId
                    $newDpl.attr('id', clinicId)
                    $newDpl.attr('id', 'actionClinic')
                    $newDpl.appendTo($(this).closest('.tr_clone').find('.actionContent'));
                    $newDpl.find('.dplCap').text('Clinics')
                    $newDpl.show();
                    $.ajax({
                        type: "GET",
                        url: "/record/getClinics",
                        data: "{}",
                        success: function (data) {
                            var s = '<option value="-1">Please Select a Clinic</option>';
                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].text + '">' + data[i].id + '</option>';
                            }
                            $newDpl.find('.dpl').html(s);
                        }
                    });
                }
                if (this.value == 'updPhys') {
                    var physId = 'dplPhys_' + tId
                    $newDpl.attr('id', physId)
                    $newDpl.appendTo($(this).closest('.tr_clone').find('.actionContent'));
                    $newDpl.find('.dplCap').text('Physicians')
                    $newDpl.show();
                    $.ajax({
                        type: "GET",
                        url: "/record/getAllPhysicians",
                        data: "{}",
                        success: function (data) {
                            var s = '<option value="-1">Please Select a Physician</option>';
                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].id + '">' + data[i].text + '</option>';
                            }
                            $newDpl.find('.dpl').html(s);
                        }
                    });
                }

            });

            $('button.tr_clone_remove').on('click', function () {
                var clone = $(this).closest('.tr_clone');
                var rowCount = $('#actionDetail tr').length;
                if (rowCount > 2) {
                    clone.remove();
                }
                else {
                    clone.find(':text').val('');
                    clone.find('.dpl').prop('selectedIndex', 0)
                    if (!$('#actionDetail').is(':hidden')) {
                        $('#actionDetail .actionContent').hide();
                        $('#actionDetail').hide();
                        $('#btnExecute').hide();
                    }
                }

            });

            $('button.tr_clone_clear').on('click', function () {
                var clone = $(this).closest('.tr_clone');
                clone.find(':text').val('');
                clone.find('.dpl').prop('selectedIndex', 0)
                clone.find(':checkbox').prop('checked', false)
            });

            $('#reset').on('click', function () {
                if(confirm("Reset filter will also de-select all the records, are you sure?"))
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ResetFilter","BulkEdit")',
                    success: function () {
                        location.reload();
                    }
                });                
            });

            $('#btnExecute').on('click', function () {
                var bulkActions = [];
                var valValidated = true;
                $('tr.tr_clone').each(function (i, action) {
                    var stp = [];
                    var actName = $(action).find('.dplAction').val();
                    var field = $(action).find('.actionInput').attr('name');
                    var field2 = $(action).find('.actionInput2').attr('name')
                    var value1 = $(action).find('.actionInput').val();
                    var value2 = $(action).find('.actionInput2').val();
                    var dlpVal = $(action).find('.dplInput').val();

                    if (field == 'codeName') {
                        if (value1 == null || value1 == '') {
                            valValidated = false;
                            $(action).find('.codeName').addClass('has-error')
                        }
                        else {
                            stp.push({
                                key: 'CPT',
                                value: value1
                            });

                        }
                        
                    }
                    if (field2 == 'modifier') {
                        if (value2 == null || value2 == '') {
                            valValidated = false;
                            $(action).find('.modifier').addClass('has-error')
                        }
                        else {
                            stp.push({
                                key: 'Mofifier',
                                value: value2
                            });
                        }
                       
                    }
                    if (field == 'icdCodeName') {
                        stp.push({
                            key: 'ICD',
                            value: value1
                        });
                    }

                    if ($(action).find('.dplCap').text() == 'Physicians') {

                        stp.push({
                            key: 'UpdatePhysician',
                            value: dlpVal
                        });
                    }

                    if ($(action).find('.dplCap').text() == 'Clinics') {

                        stp.push({
                            key: 'UpdateClinic',
                            value: dlpVal
                        });
                    }
                    bulkActions.push({

                        actionName: actName,
                        actionSteps: stp
                    })

                });

                if (valValidated) {
                    $.ajax({
                        type: "POST",
                        url: "/BulkEdit/ExecuteAct",
                        data: {
                            actions: bulkActions
                        },

                    }).done(function (response) {
                        if (response.success) {
                            $('#saveBulk').prop('disabled', false);                          
                        }
                        
                    }).fail(function (response) {
                        alert("Something went wrong, the bulk action did not excute properly.")
                    });
                    
                }
                else {
                    alert("Please privide value for an action.")
                }
                flaggedGrid.reload();
            });

            $('#cancel').on('click', function () {
                $.ajax({
                    type: 'POST',
                    url: '/BulkEdit/CancelChange',
                    success: function (response) {

                        if (response.success == true) {
                            alert('The current page will need to be reloaded. All the changes will be removed.');
                            window.location.href = response.url;                           
                        }
                        
                    }

                });
            });


            $('#saveBulk').on('click', function () {
                 $.ajax({
                    type: 'POST',
                    url: '/BulkEdit/BulkSave',
                    success: function (response) {

                        if (response.success == true) {
                            alert('The current page will need to be reloaded. All the changes will be saved');
                            window.location.href = response.url;                           
                        }
                        
                    }

                });
            });

            function cleanActionTable() {
                $('#actionDetail').find("tr:gt(1)").remove();
                $('.tr_clone').find(':text').val('');

                $('.tr_clone').find('.dpl').prop('selectedIndex', 0)
                $('.tr_clone').find(':checkbox').prop('checked', false)
            }

            function cloneActionTable(clone, index) {
                clone.attr('id', 'id' + (index)); //update row id if required
                clone.find(':text').val('');
                //update ids of elements in row
                clone.find("*").each(function () {
                    var id = this.id || "";
                    var match = id.match(regex) || [];
                    if (match.length == 3) {
                        this.id = match[1] + (index);
                    }
                });
                if (index = 1) {
                    clone.find('.dpl').removeAttr('disabled');
                }
            }

            function filterBulkView() {
                var clinics = [];
                var physicians = [];
                var physicians = [];
                var rules = [];
                var finclasses = [];
                $('#clinic > Option:selected').each(function () {
                    clinics.push(this.value);
                });

                $('#physician > Option:selected').each(function () {
                    physicians.push(this.value);
                });
                $('#rule > Option:selected').each(function () {
                    rules.push(this.value);
                });
                $('#finclass > Option:selected').each(function () {
                    finclasses.push(this.value);
                });
                flaggedGrid.reload(
                    {
                        clinic: clinics.join(','),
                        physician: physicians.join(','),
                        rule: rules.join(','),
                        finclass: finclasses.join(','),
                        startDate: $('#startDate').val(),
                        endDate: $('#endDate').val(),
                    });
            }

            function SelectRecord(id, mark) {

                $.ajax({
                        type: 'POST',
                        url: '/BulkEdit/SelectRecord',
                        data: {
                            visitId: id,
                            isSelected: mark
                        },
                        success: function () {

                        },

                    })

            }

        })
    </script>
}

<div class="alert alert-warning" id="bulkUpdatemsg" hidden>
    <strong>Warning!</strong>
</div>
<h1>Bulk Update Records</h1>
<div class="row">
    <div class="col-lg-6">
        <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
            <button type="button" class="btn btn-success" disabled="disabled" id="saveBulk">Bulk Save</button>
            <button type="button" class="btn btn-info" id="cancel">Cancel</button>
        </div>
    </div>
</div>



<div class="row top-buffer">
    <div class="col-md-12">
        <div class="box box-widget">
            <div class="box-header with-border">
                <h3 class="box-title">Filters</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="Clinic" class="control-label"> Clinic</label>
                            <select class="form-control" asp-for="Clinic" , asp-items="@Model.Clinics" id="clinic" multiple></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="Physician" class="control-label">Physician</label>
                            <select class="form-control" asp-for="Physician" , asp-items="@Model.Physicians" id="physician" multiple></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="FlaggedRule" class="control-label"> Flagged Rule</label>
                            <select class="form-control" asp-for="FlaggedRule" , asp-items="@Model.FlaggedRules" id="rule" multiple></select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="FinClass" class="control-label"> Fin Class</label>
                            <select class="form-control" asp-for="FinClass" , asp-items="@Model.FinClasses" id="finclass" multiple></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="StartDate" class="control-label">Visit Start Date</label>
                            <input class="form-control date" id="startDate" type="text" asp-for="@Model.StartDate" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="EndDate" class="control-label">Visit End Date</label>
                            <input class="form-control date" id="endDate" type="text" asp-for="@Model.EndDate" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="control-group">
                                <div style="margin-top: 24px;">
                                    <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
                                        <input type="button" value="Filter" class="btn btn-primary" id="filterButton" />
                                        <button type="button" class="btn btn-default" id="reset">Reset</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row top-buffer">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="box-title">Bulk Action</h3>
            </div>
            <div class="panel-body">
                <div class="box box-warning">
                    <div class="box-header with-border">
                        <div class="col-lg-9 align-self-end">
                            <div class="row">
                                <button type="button" class="btn btn-success glyphicon glyphicon-plus" id="btnAddAction"></button>
                                <button type="button" class="btn btn-primary " id="btnExecute" style="display:none">Execute</button>
                            </div>
                        </div>
                    </div>
                    <div class="alert alert-danger alert-dismissible" role="alert" id='actionMsg' hidden>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <strong>Attention!</strong>
                    </div>

                    <table class="table table-borderless" id="actionDetail" hidden>
                        <thead>
                            <tr>
                                <th scope="col" class="col-md-1">Action</th>
                                <th scope="col" class="col-md-1"></th>
                                <th scope="col" class="col-md-10"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="tr_clone" id="id1">
                                <td>
                                    <select class="form-control dpl actionSelector dplAction">
                                        <option value="0">Select</option>
                                        <option value="addMod">Add Modifier</option>
                                        <option value="delMod">Delete Modifier</option>
                                        <option value="addCpt">Add CPT</option>
                                        <option value="delCpt">Delete CPT</option>
                                        <option value="addIcd">Add ICD</option>
                                        <option value="delIcd">Delete ICD</option>
                                        <option value="updPhys">Update Physicin</option>
                                        <option value="updClinic">Update Clinic</option>
                                        <option value="unFlag">Clear Flag</option>
                                    </select>
                                </td>

                                <td>
                                    <button class="btn btn-outline tr_clone_remove">
                                        <span class="glyphicon glyphicon-remove text-red" arial-hidden="true" style="padding-top: 15%" data-toggle="tooltip" title="Delete row entires"></span>
                                    </button>
                                    <button class="btn btn-outline tr_clone_clear">
                                        <span class="glyphicon glyphicon-repeat text-blue" arial-hidden="true" style="padding-top: 15%" data-toggle="tooltip" title="Clear row entries"></span>
                                    </button>
                                </td>
                                <td class="actionContent"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row top-buffer">
    <div class="col-md-12">
        <div class="box box-warning">
            <div class="box-header with-border">
                <h3 class="box-title">Flagged Visit Records</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-1">
                        <div class="form-check">
                            <input class="form-check-input totalSelect" type="radio" name="selectRecords" id="selectAll">
                            <label class="form-check-label" for="selectAll">
                                Sellect All
                            </label>
                        </div>
                     </div>
                    <div class="col-xs-1">
                        <div class="form-check">
                            <input class="form-check-input totalSelect" type="radio" name="selectRecords" id="unSelectAll">
                            <label class="form-check-label" for="unSelectAll">
                                UnSellect All
                            </label>
                        </div>
                    </div>
                 </div>
                <div class="table-responsive">
                    <table id="flaggedVisitTable" class="table table-striped"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="codeTemp" class="row" hidden>
    <div class="col-md-5 row codeName">
        <div class="col-xs-3">
            <label data-error="wrong" data-success="right" for="actionInput">Code Name</label>
        </div>
        <div class="col-xs-9">
            <input type="text" class="form-control actionInput" name="codeName" required>
        </div>
    </div>

    <div class="col-md-5 row modifier">
        <div class="col-xs-3">
            <label data-error="wrong" data-success="right" for="actionInput">Modifier</label>
        </div>
        <div class="col-xs-9">
            <input type="text" class="form-control actionInput2" name="modifier" required>
        </div>
    </div>
</div>


<div id="dplTemp" class="row" hidden>
    <div class="col-md-5 row">
        <div class="col-xs-3">
            <label data-error="wrong" data-success="right" class="dplCap"></label>
        </div>
        <div class="col-xs-9">
            <select class="form-control dpl dplInput">
            </select>
        </div>
    </div>
</div>

<div id="icdTemp" class="row" hidden>
    <div class="col-md-5 row">
        <div class="col-xs-2">
            <label data-error="wrong" data-success="right" >Code name</label>
        </div>
        <div class="col-xs-10">
            <input type="text" class="form-control actionInput" name="icdCodeName" required>
        </div>
    </div>
</div>








