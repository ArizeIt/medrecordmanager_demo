@model MedRecordManager.Models.SearchInputs
@{
    ViewData["Title"] = "Record Manager - Daily Review";
}

@section scripts{
    <script type="text/javascript">

        var dailyGrid;
        var flaggedGrid;
        var modifiedGrid;

        $(document).ready(function () {
            var type = $('#searchType').val();
            var flagManager = function (value, record, $cell, $displayEl, id, $grid) {
                var $checkBox = $('<input type="checkbox">').prop('checked', record.isFlagged)
                        .attr({
                            'dataKey': id
                            });

                $checkBox.on('click', function () {
                    var mark = $(this).is(':checked')
                    $.ajax({
                        type: 'POST',
                        data: {
                            visitId : id,
                            flag: mark
                        },
                        url: '/Record/FlagVisit',
                        cache: false,
                        success: function () {
                            flaggedGrid.reload({ page: 1 });
                        }
                    })

                   
                });
                $displayEl.empty().append($checkBox);
            };
            var editManager = function (value, record, $cell, $displayEl, id, $grid) {
                var /*data = $grid.data(),    */            
                    $detail = $('<button type="button"class="btn btn-info">Detail</button><span style="padding-right: 5px"/>').attr('data-key', id),
                    $edit = $('<button type="button"class="btn btn-warning">Edit</button>').attr('data-key', id),
                    $update = $('<button type="button"class="btn btn-success">Update</button><span style="padding-right: 5px"/>').attr('data-key',id).hide(),
                    $cancel = $('<button type="button"class="btn btn-default">Cancel</button>').attr('data-key', id).hide();
                    
                
                $detail.on('click', function (e) {
                    addTab($(this).data('key'))
                });
                $edit.on('click', function (e) {
                    $grid.edit($(this).data('key'));
                    $edit.hide();
                    $detail.hide();
                    $update.show();
                    $cancel.show();
                });
                $update.on('click', function (e, id, record) {
                    $grid.update($(this).data('key'));
                    $edit.show();
                    $detail.show();
                    $update.hide();
                    $cancel.hide();       
                });
                    
  
                $cancel.on('click', function (e) {
                    $grid.cancel($(this).data('key'));
                    $edit.show();
                    $detail.show();
                    $update.hide();
                    $cancel.hide();
                });
                $displayEl.empty().append($detail).append($edit).append($update).append($cancel);
            };

            flaggedGrid = $('#flaggedVisitTable').grid({
                primaryKey: 'visitId',
                dataSource: '/Record/GetFlaggedVisit',
                columns: [
                    //{ field: 'pvRecordId', width:100, title: 'PV RecordId' },
                    { field: 'Flag', width: 50, renderer: flagManager },
                    { filed: 'visitId', hidden: true },
                    { field: 'patientName', Width: 300, title: 'Patient Name'},
                    { field: 'clinicName', Width: 150, title: 'Clinic Name'},
                    { field: 'pvFinClass', minwidth: 100, title: 'Finacial Class' },
                    { field: 'payment', minwidth: 100, title: 'Payment $' },
                    { field: 'diagCode', width: 150,title: 'Diag Codes' },
                    { field: 'icdCodes', width: 150,title: 'Icd Codes' },
                    { field: 'procCodes', minwidth: 80, title: 'Proc Codes' },
                    { field: 'visitTime', minwidth: 80, title: 'Visit Date' },
                   
                ],
                pager: { limit: 10, sizes: [2, 5, 10, 20] },
            });


            if (type == 'Daily') {
                dailyGrid = $('#visitTable').grid({
                    primaryKey: 'visitId',
                    inlineEditing: { mode: 'command', managementColumn: false},
                    dataSource: '/Record/LoadDaily',
                    columns: [
                        //{ field: 'pvRecordId', width:100, title: 'PV RecordId' },
                        { field: 'Flag', width:50, renderer: flagManager },
                        { filed: 'visitId', hidden: true },
                        { field: 'patientName', width: 300, title: 'Patient Name', priority: 1 },
                        { field: 'clinicName', width: 150, title: 'Clinic Name', priority: 2, type: 'dropdown', editor: { dataSource: '/Record/GetClinics', valueField: 'id' }, editField: 'clinicName' },
                        { field: 'pvFinClass', minWidth:100, title: 'Finacial Class' },
                        { field: 'payment', minWidth: 100, title: 'Payment $'},
                        //{ field: 'diagCode', width: 150,title: 'Diag Codes' },
                        //{ field: 'icdCodes', width: 150,title: 'Icd Codes' },
                        { field: 'procCodes', minWidth: 80, title: 'Proc Codes', priority: 3 },
                        { field: 'visitTime', minWidth: 80, title: 'Visit Date' },
                        //{ field: 'Action', width: 100, renderer: detailButtonRender },
                        { field: 'Actions', width: 200, renderer: editManager, align:'center'}
                    ],
                    pager: { limit: 10, sizes: [2, 5, 10, 20] },
                    detailTemplate: '<div><table/></div>'
                });

                dailyGrid.on('detailExpand', function (e, $detailWrapper, id) {
                    $detailWrapper.find('table').grid({
                        params: { visitId: id },
                        dataSource: '/Record/Payer',
                        autoGenerateColumns: true
                    });
                });

                dailyGrid.on('detailCollapse', function (e, $detailWrapper, id) {
                    $detailWrapper.find('table').grid('destroy', true, true);
                });

                dailyGrid.on('rowDataChanged', function (e, id, record) {
                    var data = $.extend(true, {}, record);
                    $.ajax({
                        url: '/Record/UpdateVisitAsync',
                        data: { record: data },
                        method: 'POST',
                        cache: false,
                        success: function (response) {
                            if (!response.success) {
                                alert(response.message)
                            }
                            else {
                                alert(response.record.visitId + " has been updated.")
                            }
                        }
                    }).fail(function () {
                        alert("Failt to save the changes.")
                    })
                })
            }
            else if (type == 'Callback') {
                dailyGrid = $('#visitTable').grid({
                    primaryKey: 'pvId',
                    inlineEditing: { mode: 'dblclick' },
                    dataSource: '/Record/LoadCallback',
                    uiLibrary: 'bootstrap',
                    columns: [
                        { field: 'pvId', hidden: true },
                        { field: 'patientName' },
                        { field: 'pvClinic' },
                        { field: 'visitDate' },
                        { field: 'pvPhone', title: 'Phone No.', editor: true },
                        { field: 'pvPhoneType', title: 'Type', editor: true },
                        { field: 'cellPhone', editor: true }
                    ],
                    pager: { limit: pagelimit, sizes: pagesize }
                });

            }


            modifiedGrid = $('#changeTable').grid({
                primaryKey: 'visitId',
                dataSource: '/Record/GetModifiedRecord',
                data: {
                    startDate: $('#startDate').val(),
                    endDate: $('#endDate').val()
                },
                autoGenerateColumns: true,
                pager: { limit: 10, sizes: [2, 5, 10, 20] },
            });

            patientGrid = $('#patientGrid').grid({
                primaryKey: 'PvPatientId',
                datasource: '/record/GetPatientDetail',
                uiLibrary: 'bootstrap',
            });

            payerGrid = $('#payerGrid').grid({
                primaryKey: 'PvPatientId',
                datasource: '/record/GetPatientDetail',
                uiLibrary: 'bootstrap',
            });

            guarantorGrid = $('#guarantorGrid').grid({
                primaryKey: 'PvPatientId',
                datasource: '/record/GetPatientDetail',
                uiLibrary: 'bootstrap',
            });


            $('#startDate').datepicker({
                uiLibrary: 'bootstrap'
            });

            $('#endDate').datepicker({
                uiLibrary: 'bootstrap'
            });

            $('#searchButton').on('click', function () {
                var type = $('#searchType').val();

                if ($('#officeKey').val().length == 0) {
                    $('#officeKey').closest('.form-group').addClass('has-error')
                }
                else {
                    $('#officeKey').closest('.form-group').removeClass('has-error')
                }

                if ($('#startDate').val().length != 0 ){
                    $('#startDate').closest('.form-group').removeClass('has-error') 
                }
                else {
                    $('#startDate').closest('.form-group').addClass('has-error')
                }

                if ($('#endDate').val().length == 0) {
                    $('#endDate').closest('.form-group').addClass('has-error')
                }
                else {
                    $('#endDate').closest('.form-group').removeClass('has-error')
                }

                if (($('#officeKey').val().length != 0 && $('#startDate').val().length != 0 && $('#endDate').val().length != 0)) {
                    if (type === 'Daily') {
                        var keys = [];
                        $('#officeKey > Option:selected').each(function () {
                            keys.push(this.value);
                        })
                        dailyGrid.clear();
                        dailyGrid.reload({ office: keys.join(','), startDate: $('#startDate').val(), endDate: $('#endDate').val() });
                    }

                    else if (type === 'Callback') {
                        dailyGrid.clear();
                        dailyGrid.reload({ office: $('#officeKey').val(), startDate: $('#startDate').val(), endDate: $('#endDate').val() });
                    }
                    $('.dataView').show();
                    $('.modified').hide();
                    //if (dailyGrid.data().records.length <= 0) {
                    //    $('#btnRun').hide()
                    //}
                    //else {
                    //    $('#btnRun').show()
                    //}
                }
                else {
                    $('.dataView').hide();
                }
            });


            $('#btnNext').click(function () {
                $('.dataView').hide();
                $('.modified').show();
                modifiedGrid.clear();
                modifiedGrid.reload({ startDate: $('#startDate').val(), endDate: $('#endDate').val()})

            });

            $('#btnRun').click(function () {
                $('#btnRun').attr('disabled', true);
                $.ajax({
                    url: '/Record/RunBatch',
                    data: {
                        startDate: $('#startDate').val(),
                        endDate: $('#endDate').val()
                    },
                    type: 'POST',

                    success: function (response) {                       
                            $('#btnRun').attr('disabled', false);                           
                    },
                    dataType:'json'
                })
            });


            function addTab(id) {
                if ($('#detail' + id).length == 0) {
                    $('.nav-tabs').find('li').last().after('<li><a data-toggle="tab" href="#detail' + id + '"><b>Visit ' + id + '</b></a></li>');
                    $.ajax({
                        type: "GET",
                        data: {
                            visitId: id
                        },
                        url: "/Record/GetDetails",
                        cache: false,
                        success: function (response) {
                            $('.tab-content').append(response);
                            $(".nav-tabs li").children('a').last().click();
                        }
                    });
                }
                else
                {
                    $('a[href$="#detail' + id+'"]').click();
                }
            };

        });

    </script>
}

    <ul class="nav nav-tabs" role="tablist">
        @if (Model.Type == "Daily")
        {
            <li class="active"><a data-toggle="tab" href="#mainView"><b>Daily Review</b></a></li>

        }
        else if (Model.Type == "Callback")
        {
            <li class="active"><a data-toggle="tab" href="#mainView"><b>Call Back</b></a></li>

        }

    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="mainView">
            <input type="hidden" asp-for="Type" id="searchType" />
            <div class="row top-buffer">
                <div class="col-md-12">
                    <div class="box box-widget">
                        <div class="box-header with-border">
                            <h3 class="box-title">Search</h3>
                        </div>
                        <div class="box-body">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="OfficeKey" class="control-label"> Select Key(s)</label>
                                    <select class="form-control" asp-for="OfficeKey" , asp-items="@Model.OfficeKeys" id="officeKey" multiple></select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="StartDate" class="control-label">Visit Start Date</label>
                                    <input class="form-control date" id="startDate" type="text" value="@DateTime.Today.AddDays(-1).ToShortDateString()" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="EndDate" class="control-label">Visit End Date</label>
                                    <input class="form-control date" id="endDate" type="text" value="@DateTime.Today.ToShortDateString()" />
                                </div>

                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="control-group">
                                        <div style="margin-top: 24px;">
                                            <input type="button" value="Search" class="btn btn-primary" id="searchButton" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (Model.Type == "Callback")
                            {
                                <div class="row">
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <label asp-for="Clinic" class="control-label">Select Clinic(s)</label>
                                            <select class="form-control" asp-for="Clinic" , asp-items="@Model.Clinics" id="officeKey" multiple></select>
                                        </div>
                                    </div>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="row dataView" style="display:none">
                <div class="col-md-12">
                    <div id="Results">
                        <div class="box box-danger">
                            <div class="box-header with-border">
                                <h3 class="box-title">Daily Visit Records</h3>
                            </div>
                            <div class="box-body">
                                <table id="visitTable" class="table table-striped"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row dataView top-buffer" style="display:none">
                <div class="col-sm-1 col-lg-offset-11 " style="text-align: left">
                    <button class="btn btn-success text-right" id="btnNext">Next</button>
                </div>
            </div>

            <div class="row modified" style="display:none">
                <div class="col-md-12">
                    <div id="Results">
                        <div class="box box-danger">
                            <div class="box-header with-border">
                                <h3 class="box-title">Modfied Records</h3>
                            </div>
                            <div class="box-body">
                                <table id="changeTable" class="table table-striped"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row modified top-buffer" style="display:none">
                <div class="col-sm-1 col-lg-offset-11 " style="text-align: left">
                    <button class="btn btn-success text-right" id="btnRun">run</button>
                </div>
            </div>


            <div class="row top-buffer">
                <div class="col-md-12">
                    <div class="box box-warning">
                        <div class="box-header with-border">
                            <h3 class="box-title">Flagged Visit Records</h3>
                        </div>
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="flaggedVisitTable" class="table table-striped"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       
    </div>
