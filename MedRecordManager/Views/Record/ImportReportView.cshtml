@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@section scripts{

        <style>



            #import-report-view table {
                width: 100%;
                border-collapse: collapse;
            }

            #import-report-view table, th, td {
                border: 1px solid black;
            }


            #import-report-view td {
                padding: 5px 15px;
            }

            #import-report-view .sortable:after {
                border-right: 5px solid transparent;
                border-left: 5px solid transparent;
                content: "";
                /*display: inline-block;*/
                vertical-align: middle;
                margin-left: 15px;
            }

            #import-report-view .asc:after {
                border-top: 5px solid #fff;
            }

            #import-report-view .desc:after {
                border-bottom: 5px solid #fff;
            }

            #import-report-view .pagination {
                text-align: center;
                margin-top: 10px;
            }

                #import-report-view .pagination ul, li, a {
                    padding: 0;
                    margin: 0;
                    display: inline-block;
                    vertical-align: middle;
                }

                #import-report-view .pagination li {
                    list-style-type: none;
                }

                #import-report-view .pagination a {
                    /*color: #fff;*/
                    text-decoration: underline;
                    padding: 10px;
                }

                    #import-report-view .pagination a.disabled,
                    #import-report-view .pagination li.active a {
                        text-decoration: none;
                        color: #666;
                    }

                    #import-report-view .pagination a.disabled {
                        cursor: default;
                    }

                #import-report-view .pagination li.active a {
                    background: #fff;
                }
        </style>

    <script type="text/javascript">

        var self;

        var currentPage = 1;
        var currentTab = "#ProcessedIn";

        // Here's my data model
        var ViewModel = function (first, last) {
            this.firstName = ko.observable(first);
            this.lastName = ko.observable(last);

            self = this;

            this.fullName = ko.pureComputed(function () {
                // Knockout tracks dependencies automatically. It knows that fullName depends on firstName and lastName, because these get called when evaluating fullName.
                return this.firstName() + " " + this.lastName();
            }, this);

            self.pagedResult = ko.observable({});
            self.clinics = ko.observableArray([]);
            self.chosenClinics = ko.observableArray([]);
            self.finClasses = ko.observableArray([]);
            self.chosenFinClasses = ko.observableArray([]);

            self.chosenClinics.subscribe(function (latest) {
                console.log(latest);
                getVisitsProcessedIn(1, { "ClinicIds": self.chosenClinics(), 'FinClassIds': self.chosenFinClasses()   })
            }, this);

            self.chosenFinClasses.subscribe(function (latest) {
                getVisitsProcessedIn(1, { "ClinicIds": self.chosenClinics(), 'FinClassIds': self.chosenFinClasses() })
            }, this);

            self.goPage = function (page) {
                console.log(page)
                currentPage = page
                //getVisitsProcessedIn(currentPage)

                 var target = currentTab;
                if (target == "#ProcessedIn") {
                    getVisitsProcessedIn(currentPage, { "ClinicIds": self.chosenClinics(), 'FinClassIds': self.chosenFinClasses() });
                }
                if (target == "#Queued") {
                    getVisitsByStatus(currentPage, "QUEUED")
                }
                if (target == "#Processing") {
                    getVisitsByStatus(currentPage, "PROCESSING")
                }
                if (target == "#ProcessedOut") {
                    getVisitsByStatus(currentPage, "DONE")
                }

            }
            self.previousPage = function () {
                if (self.pagedResult() && self.pagedResult().CurrentPage > 0) {
                    self.pagedResult().CurrentPage -=1
                }
            },

                getVisitsProcessedIn(1)

            $.getJSON(`/Record/GetClinics`, function (data) {
                self.clinics(data);
            })

            $.getJSON(`/Record/GetFinClasses`, function (data) {
                self.finClasses(data);
            })


        };



        ko.applyBindings(new ViewModel("Planet", "Earth")); // This makes Knockout get to work

        function getVisitsProcessedIn(page, filter ) {
            self.pagedResult({});
            //$.post(`/Record/GetVisitsProcessedIn?page=${page}&pageSize=20`, filter,function (data) {
            //    self.pagedResult(data);
            //    console.log(self.pagedResult())
            //}, "json")

            $.ajax({
                url: `/Record/GetVisitsProcessedIn?page=${page}&pageSize=20`,
                type: "POST",
                data: JSON.stringify(filter),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                              self.pagedResult(data);
                             console.log(self.pagedResult())
                      }
                })
        }


        function getVisitsByStatus(page, status) {
            self.pagedResult({});
            $.getJSON(`/Record/GetVisitsByStatus?status=${status}&page=${page}&pageSize=20`, function (data) {
                self.pagedResult(data);
                console.log(self.pagedResult())
            })
        }


        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            var target = $(e.target).attr("href") // activated tab
            currentTab = target;
            if (target == "#ProcessedIn") {
                getVisitsProcessedIn(1);
            }
            if (target == "#Queued") {
                getVisitsByStatus(1, "QUEUED")
            }
            if (target == "#Processing") {
                getVisitsByStatus(1, "PROCESSING")
            }
            if (target == "#ProcessedOut") {
                getVisitsByStatus(1, "DONE")
            }
        });

        //$(function () {
        //    $('input[name="daterange"]').daterangepicker({
        //        opens: 'left'
        //    }, function (start, end, label) {
        //        console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
        //    });
        //});

        //$("#clinics-select").on('change', function () {
        //    var selectedData = $(this).find(":selected").data("stuff");
        //});

    </script>
}

@*<p>First name: <input data-bind="value: firstName" /></p>
<p>Last name: <input data-bind="value: lastName" /></p>
<h2>Hello, <span data-bind="text: fullName"> </span>!</h2>*@

<p>
    Choose clinics:
    <select id="clinics-select" data-bind=" options: clinics, selectedOptions: chosenClinics, optionsText: 'text', optionsValue: 'id'" size="6"  multiple="true"></select>
</p>

<p>
    Choose finclasses:
    <select data-bind="options: finClasses, selectedOptions: chosenFinClasses, optionsText: 'text', optionsValue: 'text'" size="6" multiple="true"></select>
</p>

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#ProcessedIn">Processed In</a></li>
    <li><a data-toggle="tab" href="#Queued">Queued</a></li>
    <li><a data-toggle="tab" href="#Processing">Processing</a></li>
    <li><a data-toggle="tab" href="#ProcessedOut">Processed Out</a></li>
</ul>

<div class="tab-content" id="import-report-view">
    <div id="ProcessedIn" class="tab-pane fade in active">
        <h3>Processed In Visits</h3>
        <span>Please run batch as legacy step</span>
        <div>
            <table border="1">
                <thead>
                    <tr>
                        <th>TimeIn</th>
                        <th>ClinicId</th>
                        <th>PatId</th>
                        <th>FinClass</th>
                        @*<th>Imported Date</th>
                        <th>Charge Imported</th>
                        <th>Office Key</th>*@
                    </tr>
                </thead>
                <tbody data-bind="foreach: pagedResult().Results">
                    <tr>
                        <td data-bind="text:TimeIn"></td>
                        <td data-bind="text:ClinicId"></td>
                        <td data-bind="text:PvPatientId"></td>
                        <td data-bind="text:FinClass"></td>
                        @*<td data-bind="text:VisitImportLogs[0].ImportedDate"></td>
                        <td data-bind="text:VisitImportLogs[0].ChargeImported"></td>
                        <td data-bind="text:VisitImportLogs[0].OfficeKey"></td>*@
                    </tr>
                </tbody>
            </table>
            <div class="pagination" data-bind="if: pagedResult()">
                <a href="#" data-bind="click: previousPage, css: {'disabled': pagedResult().CurrentPage <= 0}">Previous</a>
                <ul data-bind="foreach:new Array(pagedResult().PageCount)">
                    <li data-bind="css: {'active': $index()+1 ==  $root.pagedResult().CurrentPage}">
                        <a href="#" data-bind="click: $root.goPage.bind($data, $index() + 1), text:$index() + 1">0</a>
                    </li>
                    @*<li data-bind="css: {'active': $index() ==  pagedResult().CurrentPage}">
                            <a href="#" data-bind="text:$index() + 1">0</a>
                        </li>*@
                </ul>
                @*<a href="#" data-bind="click: nextPage, css: {'disabled': pagedResult().CurrentPage >= pagedResult().PageCount}">Next</a>*@
            </div>
        </div>
    </div>
    <div id="Queued" class="tab-pane fade">
        <h3>Queued Visits</h3>
        <div>
            <table border="1">
                <thead>
                    <tr>
                        <th>TimeIn</th>
                        <th>ClinicId</th>
                        <th>PatId</th>
                        <th>FinClass</th>

                    </tr>
                </thead>
                <tbody data-bind="foreach: pagedResult().Results">
                    <tr>
                        <td data-bind="text:TimeIn"></td>
                        <td data-bind="text:ClinicId"></td>
                        <td data-bind="text:PvPatientId"></td>
                        <td data-bind="text:FinClass"></td>

                    </tr>
                </tbody>
            </table>
            <div class="pagination" data-bind="if: pagedResult()">
                <a href="#" data-bind="click: previousPage, css: {'disabled': pagedResult().CurrentPage <= 0}">Previous</a>
                <ul data-bind="foreach:new Array(pagedResult().PageCount)">
                    <li data-bind="css: {'active': $index()+1 ==  $root.pagedResult().CurrentPage}">
                        <a href="#" data-bind="click: $root.goPage.bind($data, $index() + 1), text:$index() + 1">0</a>
                    </li>
                    @*<li data-bind="css: {'active': $index() ==  pagedResult().CurrentPage}">
            <a href="#" data-bind="text:$index() + 1">0</a>
        </li>*@
                </ul>
                @*<a href="#" data-bind="click: nextPage, css: {'disabled': pagedResult().CurrentPage >= pagedResult().PageCount}">Next</a>*@
            </div>
        </div>
    </div>
    <div id="Processing" class="tab-pane fade">
        <h3>Processing Visits</h3>
        <div>
            <table border="1">
                <thead>
                    <tr>
                        <th>TimeIn</th>
                        <th>ClinicId</th>
                        <th>PatId</th>
                        <th>FinClass</th>

                    </tr>
                </thead>
                <tbody data-bind="foreach: pagedResult().Results">
                    <tr>
                        <td data-bind="text:TimeIn"></td>
                        <td data-bind="text:ClinicId"></td>
                        <td data-bind="text:PvPatientId"></td>
                        <td data-bind="text:FinClass"></td>

                    </tr>
                </tbody>
            </table>
            <div class="pagination" data-bind="if: pagedResult()">
                <a href="#" data-bind="click: previousPage, css: {'disabled': pagedResult().CurrentPage <= 0}">Previous</a>
                <ul data-bind="foreach:new Array(pagedResult().PageCount)">
                    <li data-bind="css: {'active': $index()+1 ==  $root.pagedResult().CurrentPage}">
                        <a href="#" data-bind="click: $root.goPage.bind($data, $index() + 1), text:$index() + 1">0</a>
                    </li>
                    @*<li data-bind="css: {'active': $index() ==  pagedResult().CurrentPage}">
            <a href="#" data-bind="text:$index() + 1">0</a>
        </li>*@
                </ul>
                @*<a href="#" data-bind="click: nextPage, css: {'disabled': pagedResult().CurrentPage >= pagedResult().PageCount}">Next</a>*@
            </div>
        </div>
    </div>
    <div id="ProcessedOut" class="tab-pane fade">
        <h3>Processed Out Visits</h3>
        <div>
            <table border="1">
                <thead>
                    <tr>
                        <th>ClinicId</th>
                        <th>PatId</th>
                        <th>FinClass</th>
                        @*<th>Imported Date</th>
                        <th>Charge Imported</th>
                        <th>Office Key</th>*@
                    </tr>
                </thead>
                <tbody data-bind="foreach: pagedResult().Results">
                    <tr>
                        <td data-bind="text:ClinicId"></td>
                        <td data-bind="text:PvPatientId"></td>
                        <td data-bind="text:FinClass"></td>
                        @*<td data-bind="text:VisitImportLogs[0].ImportedDate"></td>
                        <td data-bind="text:VisitImportLogs[0].ChargeImported"></td>
                        <td data-bind="text:VisitImportLogs[0].OfficeKey"></td>*@
                    </tr>
                </tbody>
            </table>
            <div class="pagination" data-bind="if: pagedResult()">
                <a href="#" data-bind="click: previousPage, css: {'disabled': pagedResult().CurrentPage <= 0}">Previous</a>
                <ul data-bind="foreach:new Array(pagedResult().PageCount)">
                    <li data-bind="css: {'active': $index()+1 ==  $root.pagedResult().CurrentPage}">
                        <a href="#" data-bind="click: $root.goPage.bind($data, $index() + 1), text:$index() + 1">0</a>
                    </li>
                    @*<li data-bind="css: {'active': $index() ==  pagedResult().CurrentPage}">
            <a href="#" data-bind="text:$index() + 1">0</a>
        </li>*@
                </ul>
                @*<a href="#" data-bind="click: nextPage, css: {'disabled': pagedResult().CurrentPage >= pagedResult().PageCount}">Next</a>*@
            </div>
        </div>
    </div>
</div>