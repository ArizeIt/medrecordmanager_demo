// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UgentCareDate;

namespace UrgentCareData.Migrations
{
    [DbContext(typeof(UrgentCareContext))]
    partial class UrgentCareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UgentCareDate.Models.ChartImportLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmdFileId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AmdimportId")
                        .HasColumnName("AMDImportId");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PvChartDocId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AmdimportId");

                    b.ToTable("ChartImportLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.GuarantorInformation", b =>
                {
                    b.Property<int>("PayerNum")
                        .HasColumnName("Payer_Num");

                    b.Property<string>("Address1")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Address2")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PvPatientId");

                    b.Property<string>("RelationshipCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(50);

                    b.HasKey("PayerNum");

                    b.ToTable("GuarantorInformation");
                });

            modelBuilder.Entity("UgentCareDate.Models.PatientImportLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmdimportId")
                        .HasColumnName("AMDImportId");

                    b.Property<string>("AmdpatientId")
                        .IsRequired()
                        .HasColumnName("AMDPatientId")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OfficeKey")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("PvpatientId")
                        .HasColumnName("PVPatientId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AmdimportId");

                    b.ToTable("PatientImportLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.PatientInformation", b =>
                {
                    b.Property<int>("PatNum")
                        .HasColumnName("Pat_Num");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Birthday")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PatPhone")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasColumnName("SSN")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PatNum");

                    b.ToTable("PatientInformation");
                });

            modelBuilder.Entity("UgentCareDate.Models.PayerImportLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmdimportId")
                        .HasColumnName("AMDImportId");

                    b.Property<string>("AmdpayerId")
                        .IsRequired()
                        .HasColumnName("AMDPayerId")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OfficeKey")
                        .HasMaxLength(50);

                    b.Property<int>("PayerInfoId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AmdimportId");

                    b.ToTable("PayerImportLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.PayerInformation", b =>
                {
                    b.Property<int>("PayerInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Class");

                    b.Property<string>("GroupId")
                        .HasMaxLength(50);

                    b.Property<string>("InsName")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("InsuranceId");

                    b.Property<string>("MemberId")
                        .HasMaxLength(50);

                    b.Property<int?>("PayerNum");

                    b.Property<int?>("Priority");

                    b.Property<string>("Type")
                        .HasMaxLength(10);

                    b.Property<int>("VisitId");

                    b.HasKey("PayerInfoId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("VisitId");

                    b.ToTable("PayerInformation");
                });

            modelBuilder.Entity("UgentCareDate.Models.Physican", b =>
                {
                    b.Property<int>("PvPhysicanId")
                        .HasColumnName("PV_PhysicanId");

                    b.Property<string>("Clinic")
                        .HasMaxLength(50);

                    b.Property<string>("AmProviderId")
                        .HasColumnName("AM_ProviderId")
                        .HasMaxLength(50);

                    b.Property<string>("AmdCode")
                        .HasMaxLength(50);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsDefault");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OfficeKey")
                        .HasMaxLength(50);

                    b.HasKey("PvPhysicanId", "Clinic");

                    b.ToTable("Physican");
                });

            modelBuilder.Entity("UgentCareDate.Models.VisitImpotLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmdimportLogId")
                        .HasColumnName("AMDImportLogId");

                    b.Property<string>("AmdvisitId")
                        .IsRequired()
                        .HasColumnName("AMDVisitId")
                        .HasMaxLength(50);

                    b.Property<bool?>("ChargeImported");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OfficeKey")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("VisitId");

                    b.HasKey("Id");

                    b.HasIndex("AmdimportLogId");

                    b.ToTable("VisitImpotLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.VisitProcCode", b =>
                {
                    b.Property<int>("VisitProcCodeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProcCode")
                        .HasMaxLength(200);

                    b.Property<int?>("Quantity");

                    b.Property<int>("VisitId");

                    b.HasKey("VisitProcCodeId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitProcCode");
                });

            modelBuilder.Entity("UrgentCareData.Models.AdvancedMdcolumnHeader", b =>
                {
                    b.Property<string>("Clinic")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OfficeKey");

                    b.Property<string>("ColumnHeader")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FacilityId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Clinic", "OfficeKey");

                    b.ToTable("AdvancedMDColumnHeader");
                });

            modelBuilder.Entity("UrgentCareData.Models.AdvancedMdprogram", b =>
                {
                    b.Property<string>("AmdofficeKey")
                        .HasColumnName("AMDOfficeKey")
                        .HasMaxLength(50);

                    b.Property<string>("Amdpassword")
                        .IsRequired()
                        .HasColumnName("AMDPassword")
                        .HasMaxLength(50);

                    b.Property<string>("Amdurl")
                        .IsRequired()
                        .HasColumnName("AMDUrl")
                        .HasMaxLength(250);

                    b.Property<string>("AmduserName")
                        .IsRequired()
                        .HasColumnName("AMDUserName")
                        .HasMaxLength(50);

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AmdofficeKey");

                    b.ToTable("AdvancedMDProgram");
                });

            modelBuilder.Entity("UrgentCareData.Models.AdvanceMdimportLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ImportedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SourceProcessId");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AdvanceMDImportLog");
                });

            modelBuilder.Entity("UrgentCareData.Models.Chart", b =>
                {
                    b.Property<int>("ChartId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DischargedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DischargedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("SignOffSealedDate")
                        .HasColumnType("date");

                    b.Property<string>("SignedOffSealedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ChartId");

                    b.ToTable("Chart");
                });

            modelBuilder.Entity("UrgentCareData.Models.ChartDocument", b =>
                {
                    b.Property<int>("ChartDocId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChartId");

                    b.Property<byte[]>("DocumentImage")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<short>("FileType");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("date");

                    b.Property<short>("NumberOfPages");

                    b.Property<int>("PatNum");

                    b.HasKey("ChartDocId");

                    b.HasIndex("ChartId");

                    b.ToTable("ChartDocument");
                });

            modelBuilder.Entity("UrgentCareData.Models.ClinicProfile", b =>
                {
                    b.Property<string>("ClinicId")
                        .HasMaxLength(50);

                    b.Property<string>("AmdcodeName")
                        .HasColumnName("AMDCodeName")
                        .HasMaxLength(50);

                    b.Property<string>("AmdcodePrefix")
                        .HasColumnName("AMDCodePrefix")
                        .HasMaxLength(50);

                    b.Property<string>("ClinicFullName")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("OfficeKey");

                    b.HasKey("ClinicId");

                    b.ToTable("ClinicProfile");
                });

            modelBuilder.Entity("UrgentCareData.Models.GuarantorImportLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmdResponsiblePartyId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AmdimportId")
                        .HasColumnName("AMDImportId");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OfficeKey")
                        .HasMaxLength(50);

                    b.Property<int>("PayerNumber");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PayerNumber");

                    b.ToTable("GuarantorImportLog");
                });

            modelBuilder.Entity("UrgentCareData.Models.InsuranceInformation", b =>
                {
                    b.Property<int>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmdCode")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryAddress1")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("PrimaryAddress2")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("PrimaryCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PrimaryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("PrimaryPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PrimaryState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PrimaryZip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("InsuranceId");

                    b.ToTable("InsuranceInformation");
                });

            modelBuilder.Entity("UrgentCareData.Models.PatientDocument", b =>
                {
                    b.Property<int>("PatDocId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmdFileId")
                        .HasMaxLength(50);

                    b.Property<byte[]>("FileImage")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("FileType");

                    b.Property<string>("LastVerifedBy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime>("LastVerifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("NumofPages");

                    b.Property<int>("VisitId");

                    b.HasKey("PatDocId");

                    b.ToTable("PatientDocument");
                });

            modelBuilder.Entity("UrgentCareData.Models.ProgramConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdditionalCharge");

                    b.Property<string>("AmdAppName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("AmdSync");

                    b.Property<int>("AmdofficeKey")
                        .HasColumnName("AMDOfficeKey");

                    b.Property<string>("Apipassword")
                        .IsRequired()
                        .HasColumnName("APIPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Apiuri")
                        .IsRequired()
                        .HasColumnName("APIUri")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ApiuserName")
                        .IsRequired()
                        .HasColumnName("APIUserName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CcemailAddress")
                        .HasColumnName("CCEmailAddress")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<bool>("Enabled");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<bool>("Force");

                    b.Property<string>("FromEmailAddress")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<int>("OffSetDays");

                    b.Property<bool>("ProcessSource");

                    b.Property<string>("PvfilePrefix")
                        .HasColumnName("PVFilePrefix")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pvfilename")
                        .HasColumnName("PVFilename")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RunAs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Smtppassword")
                        .HasColumnName("SMTPPassword")
                        .HasMaxLength(50);

                    b.Property<string>("Smtpport")
                        .HasColumnName("SMTPPort")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Smtpserver")
                        .HasColumnName("SMTPServer")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Smtpusername")
                        .HasColumnName("SMTPUsername")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("SyncOnly");

                    b.Property<string>("TechEmailAddress")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<string>("ToEmailAddress")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ProgramConfig");
                });

            modelBuilder.Entity("UrgentCareData.Models.Relationship", b =>
                {
                    b.Property<string>("Hipaarelationship")
                        .HasColumnName("HIPAARelationship")
                        .HasMaxLength(5);

                    b.Property<int?>("AmrelationshipCode")
                        .HasColumnName("AMRelationshipCode");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Hipaarelationship");

                    b.ToTable("Relationship");
                });

            modelBuilder.Entity("UrgentCareData.Models.SourceProcessLog", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("FileSize");

                    b.Property<bool?>("ImportedToAmd")
                        .HasColumnName("ImportedToAMD");

                    b.Property<bool?>("MarkAsProcessed");

                    b.Property<bool?>("MarkDelete");

                    b.Property<string>("ProcessResult")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SourceFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("SuccessFlag");

                    b.HasKey("ProcessId");

                    b.ToTable("SourceProcessLog");
                });

            modelBuilder.Entity("UrgentCareData.Models.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChartId");

                    b.Property<string>("ClinicId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal?>("CoPayAmount")
                        .HasColumnType("money");

                    b.Property<string>("CopayNote")
                        .HasMaxLength(500);

                    b.Property<string>("CopayType")
                        .HasMaxLength(50);

                    b.Property<decimal?>("CurrentPaymentAmount")
                        .HasColumnType("money");

                    b.Property<string>("CurrentPaymentNote")
                        .HasMaxLength(500);

                    b.Property<string>("CurrentPaymentType")
                        .HasMaxLength(50);

                    b.Property<string>("DiagCodes")
                        .HasMaxLength(500);

                    b.Property<string>("Emcode")
                        .HasColumnName("EMCode")
                        .HasMaxLength(10);

                    b.Property<int>("GuarantorPayerId");

                    b.Property<string>("Icdcodes")
                        .HasColumnName("ICDCodes")
                        .HasMaxLength(500);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .HasMaxLength(500);

                    b.Property<int>("PhysicanId");

                    b.Property<decimal?>("PreviousPaymentAmount")
                        .HasColumnType("money");

                    b.Property<string>("PreviousPaymentNote")
                        .HasMaxLength(500);

                    b.Property<string>("PreviousPaymentType")
                        .HasMaxLength(50);

                    b.Property<string>("ProcCodes")
                        .HasMaxLength(500);

                    b.Property<int?>("ProcQty");

                    b.Property<int>("PvPaitentId");

                    b.Property<int>("PvlogNum")
                        .HasColumnName("PVLogNum");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SourceProcessId");

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TimeOut")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitType")
                        .HasMaxLength(50);

                    b.HasKey("VisitId");

                    b.HasIndex("ChartId");

                    b.HasIndex("ClinicId");

                    b.HasIndex("GuarantorPayerId");

                    b.HasIndex("PvPaitentId");

                    b.HasIndex("PhysicanId", "ClinicId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("UgentCareDate.Models.ChartImportLog", b =>
                {
                    b.HasOne("UrgentCareData.Models.AdvanceMdimportLog", "Amdimport")
                        .WithMany("ChartImportLog")
                        .HasForeignKey("AmdimportId")
                        .HasConstraintName("FK_ChartImportLog_AdvanceMDImportLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.PatientImportLog", b =>
                {
                    b.HasOne("UrgentCareData.Models.AdvanceMdimportLog", "Amdimport")
                        .WithMany("PatientImportLog")
                        .HasForeignKey("AmdimportId")
                        .HasConstraintName("FK_PatientImportLog_AdvanceMDImportLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.PayerImportLog", b =>
                {
                    b.HasOne("UrgentCareData.Models.AdvanceMdimportLog", "Amdimport")
                        .WithMany("PayerImportLog")
                        .HasForeignKey("AmdimportId")
                        .HasConstraintName("FK_PayerImportLog_AdvanceMDImportLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.PayerInformation", b =>
                {
                    b.HasOne("UrgentCareData.Models.InsuranceInformation", "Insurance")
                        .WithMany("PayerInformation")
                        .HasForeignKey("InsuranceId")
                        .HasConstraintName("FK_PayerInformation_InsuranceInformation");

                    b.HasOne("UrgentCareData.Models.Visit", "Visit")
                        .WithMany("PayerInformation")
                        .HasForeignKey("VisitId")
                        .HasConstraintName("FK_PayerInformation_Visit");
                });

            modelBuilder.Entity("UgentCareDate.Models.VisitImpotLog", b =>
                {
                    b.HasOne("UrgentCareData.Models.AdvanceMdimportLog", "AmdimportLog")
                        .WithMany("VisitImpotLog")
                        .HasForeignKey("AmdimportLogId")
                        .HasConstraintName("FK_VisitImpotLog_AdvanceMDImportLog");
                });

            modelBuilder.Entity("UgentCareDate.Models.VisitProcCode", b =>
                {
                    b.HasOne("UrgentCareData.Models.Visit", "Visit")
                        .WithMany("VisitProcCode")
                        .HasForeignKey("VisitId")
                        .HasConstraintName("FK_VisitProcCode_Visit");
                });

            modelBuilder.Entity("UrgentCareData.Models.ChartDocument", b =>
                {
                    b.HasOne("UrgentCareData.Models.Chart", "Chart")
                        .WithMany("ChartDocument")
                        .HasForeignKey("ChartId")
                        .HasConstraintName("FK_ChartDocument_Chart");
                });

            modelBuilder.Entity("UrgentCareData.Models.GuarantorImportLog", b =>
                {
                    b.HasOne("UgentCareDate.Models.GuarantorInformation", "PayerNumberNavigation")
                        .WithMany("GuarantorImportLog")
                        .HasForeignKey("PayerNumber")
                        .HasConstraintName("FK_GuarantorImportLog_AdvanceMDImportLog");
                });

            modelBuilder.Entity("UrgentCareData.Models.Visit", b =>
                {
                    b.HasOne("UrgentCareData.Models.Chart", "Chart")
                        .WithMany("Visit")
                        .HasForeignKey("ChartId")
                        .HasConstraintName("FK_Visit_Chart");

                    b.HasOne("UrgentCareData.Models.ClinicProfile", "ClinicProfile")
                        .WithMany("Visits")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UgentCareDate.Models.GuarantorInformation", "GuarantorPayer")
                        .WithMany("Visit")
                        .HasForeignKey("GuarantorPayerId")
                        .HasConstraintName("FK_Visit_GuarantorInformation");

                    b.HasOne("UgentCareDate.Models.PatientInformation", "PvPaitent")
                        .WithMany("Visit")
                        .HasForeignKey("PvPaitentId")
                        .HasConstraintName("FK_Visit_Patient_Information");

                    b.HasOne("UgentCareDate.Models.Physican", "Physican")
                        .WithMany("Visit")
                        .HasForeignKey("PhysicanId", "ClinicId")
                        .HasConstraintName("FK_Visit_Physican");
                });
#pragma warning restore 612, 618
        }
    }
}
